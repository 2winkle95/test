"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[815],{2684:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/gpio_1-9499adb2ebeb3def67fbb51724b97fa0.png"},6629:e=>{e.exports=JSON.parse('{"DU":"Sentinel","_E":"SOM_SL1680_Mk1","tH":"CMSAC1_AS6806_A","mQ":"sentinel_som_sl1680_mk1","zn":"EVK_SL1680_Mk1","sV":"CMCGAS_AGSL_A","UW":"sentinel-core","ND":"sentinel-media","Uf":"sentinel-media-oobe","IM":"meta-dctk-sentinel","Cy":"root","PO":"setinel"}')},6757:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"hardware-docs/gpio","title":"GPIO","description":"Let\'s verify GPIO.","source":"@site/docs/hardware-docs/gpio.mdx","sourceDirName":"hardware-docs","slug":"/hardware-docs/gpio","permalink":"/test/docs/hardware-docs/gpio","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"MIPI DSI","permalink":"/test/docs/hardware-docs/mipi_dsi"},"next":{"title":"SPI","permalink":"/test/docs/hardware-docs/spi"}}');var t=i(4848),r=i(8453),c=i(6629);i(6540);const o={sidebar_position:6},d="GPIO",l={},a=[{value:"Getting Started",id:"getting-started",level:2},{value:"GPIO Mappings",id:"gpio-mappings",level:2},{value:"Accessing GPIOs from Userspace",id:"accessing-gpios-from-userspace",level:2},{value:"Changing the Function of GPIOs",id:"changing-the-function-of-gpios",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"gpio",children:"GPIO"})}),"\n",(0,t.jsxs)(n.p,{children:["Let's verify ",(0,t.jsx)(n.strong,{children:"GPIO"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(n.p,{children:[c.DU," ",c._E," integrates many GPIOs to support its various functionalities. This guide will cover how to use GPIOs with ",c.DU," ",c._E," and configure their functionality."]}),"\n",(0,t.jsxs)(n.p,{children:["On ",c.DU," ",c._E,":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"All of the GPIOs are multiplexed and can be configured for different functionality."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"All GPIOs can be assigned interrupts. However, GPO (output only pins) cannot."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Specific details on GPIOs can be found in the ",c.DU," ",c._E," Datasheet."]}),"\n",(0,t.jsx)(n.h2,{id:"gpio-mappings",children:"GPIO Mappings"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"GPIO Port"}),(0,t.jsx)(n.th,{children:"Address"}),(0,t.jsx)(n.th,{children:"GPIOs"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"gpio0: gpio@2400"}),(0,t.jsx)(n.td,{children:"f7e82400"}),(0,t.jsx)(n.td,{children:"0 to 31"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"gpio1: gpio@0800"}),(0,t.jsx)(n.td,{children:"f7e80800"}),(0,t.jsx)(n.td,{children:"32 to 63"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"gpio2: gpio@0c00"}),(0,t.jsx)(n.td,{children:"f7e80c00"}),(0,t.jsx)(n.td,{children:"64 to 95"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"Userspace GPIO IDs are derived from the gpiochip number, which is dynamically assigned. Modifications to the device configuration, such as updates to the device tree (DTS), can alter the gpiochip number. As a result, userspace GPIO IDs must be recalculated based on the current gpiochip number assigned to the corresponding GPIO controller."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GPIOs 0\u201331"}),"\n"]}),"\n",(0,t.jsx)("div",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"GPIO ID = gpiochip# + GPIO#"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GPIOs 32\u201363"}),"\n"]}),"\n",(0,t.jsx)("div",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"GPIO ID = gpiochip# + (GPIO# - 32)"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GPIOs 64\u201395"}),"\n"]}),"\n",(0,t.jsx)("div",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"GPIO ID = gpiochip# + (GPIO# - 64)"})})}),"\n",(0,t.jsxs)(n.p,{children:["To do this calculation start by identifying the gpiochip number for the controller on which the GPIO is attached. The address will match the GPIO ports in the tables given. Find which gpiochip is associated with which GPIO port by running ",(0,t.jsx)(n.code,{children:"ls -l /sys/class/gpio"}),". The symlink will contain the GPIO port address of the port associated with the gpiochip."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Alt gpio_1",src:i(2684).A+"",width:"1412",height:"190"})}),"\n",(0,t.jsx)(n.p,{children:"The following examples show how to calculate GPIO IDs for various GPIOs, using the gpiochip number associated with the GPIO port."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GPIO 5"}),"\n"]}),"\n",(0,t.jsx)("div",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"GPIO ID = 416 + 5 = 421"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GPIO 36"}),"\n"]}),"\n",(0,t.jsx)("div",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"GPIO ID = 480 + (36 - 32) = 484"})})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GPIO 80"}),"\n"]}),"\n",(0,t.jsx)("div",{align:"center",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"GPIO ID = 448 + (80 - 62) = 464"})})}),"\n",(0,t.jsx)(n.h2,{id:"accessing-gpios-from-userspace",children:"Accessing GPIOs from Userspace"}),"\n",(0,t.jsxs)(n.p,{children:["GPIOs can be accessed and configured using the GPIO sysfs interface ",(0,t.jsx)(n.code,{children:"/sys/class/gpio"}),". GPIOs can be exported to userspace and their direction and value can be viewed or set."]}),"\n",(0,t.jsx)(n.p,{children:"For example, to export GPIO[36], run the following steps:"}),"\n",(0,t.jsx)("pre",{children:(0,t.jsx)("code",{children:`${c.Cy}@${c.PO}:~# echo 484 > /sys/class/gpio/export`})}),"\n",(0,t.jsx)(n.p,{children:"Once the GPIO has been exported, the value and direction can be viewed and set:"}),"\n",(0,t.jsx)("pre",{children:(0,t.jsxs)("code",{children:[`${c.Cy}@${c.PO}:/sys/class/gpio/gpio484# cat direction\n`,"in\n",`${c.Cy}@${c.PO}:/sys/class/gpio/gpio484# cat value\n`,"0"]})}),"\n",(0,t.jsx)(n.p,{children:"By default, the direction is set to input with the value 0. You can modify this by writing to corresponding sysfiles."}),"\n",(0,t.jsx)("pre",{children:(0,t.jsxs)("code",{children:[`${c.Cy}@${c.PO}:/sys/class/gpio/gpio484# echo "out" > direction\n`,`${c.Cy}@${c.PO}:/sys/class/gpio/gpio484# cat direction\n`,"out\n",`${c.Cy}@${c.PO}:/sys/class/gpio/gpio484# echo 1 > value\n`,`${c.Cy}@${c.PO}:/sys/class/gpio/gpio484# cat value\n`,"1"]})}),"\n",(0,t.jsx)(n.h2,{id:"changing-the-function-of-gpios",children:"Changing the Function of GPIOs"}),"\n",(0,t.jsxs)(n.p,{children:["GPIOs assigned for other functinalities can be reconfigured as gpios by updating the device tree entries in the Linux kernel. This requires modifying the ",(0,t.jsx)(n.code,{children:"linux-dct"})," package using ",(0,t.jsx)(n.code,{children:"devtool"}),":"]}),"\n",(0,t.jsxs)(n.p,{children:["Please refer ",(0,t.jsx)(n.a,{href:"/docs/Software-Documentation/Building-source/Building-with-temporary-changes",children:"Building workspace section"})," for steps to create a temperory worksapce for development."]}),"\n",(0,t.jsxs)(n.p,{children:["Modify the dts file ",(0,t.jsx)(n.code,{children:"build/workspace/sources/linux-dct/arch/arm64/boot/dts/dct/sentinel-sl1680-rdk.dts"})," by identifing the current assigned function for the GPIO and reassign them to function as GPIOs."]}),"\n",(0,t.jsx)(n.p,{children:"For example to change the GPIO12,"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Identify the functionality of GPIO12"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Currently it is configured as UART."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'\n&uart2 {\n        status = "okay";\n        pinctrl-0 = <&uart2_pmux>;\n        pinctrl-names = "default";\n};\n\n\nuart2_pmux: uart2-pmux {\n                groups = "SM_SPI2_SS2n", "SM_SPI2_SS3n", "SM_SPI2_SDI", "SM_SPI2_SDO";\n                function = "uart2";\n                drive-strength = <3>;\n        };\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Remove the Pin from the group and add it as another mux node to configure as gpio."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'&uart2 {\n        status = "okay";\n        pinctrl-0 = <&uart2_pmux>;\n        pinctrl-1 = <&uart2gpio_pmux>;\n        pinctrl-names = "default";\n};\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"&sm_pinctrl"})," node change the following."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'uart2_pmux: uart2-pmux {\n                groups = "SM_SPI2_SS2n", "SM_SPI2_SS3n", "SM_SPI2_SDO";\n               function = "uart2";\n               drive-strength = <3>;\n       };\n\nuart2gpio_pmux: uart2gpio-pmux {\n                groups = "SM_SPI2_SDI";\n                function = "gpio";\n                drive-strength = <7>;\n       };\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The pin groups and functions can be found from ",(0,t.jsx)(n.code,{children:"build/workspace/sources/linux-dct/drivers/pinctrl/berlin/pinctrl-dolphin.c"})]}),"\n",(0,t.jsxs)(n.p,{children:["Please refer ",(0,t.jsx)(n.a,{href:"/docs/Software-Documentation/Building-source/Building-a-full-image",children:"Building image section"})," for steps to build the image with updated dts."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var s=i(6540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);