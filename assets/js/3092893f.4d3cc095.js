"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[869],{2998:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"Software-Documentation/Building-source/Building-with-temporary-changes","title":"Building with temporary changes","description":"Describes steps to use build using devtool for development purpose","source":"@site/docs/Software-Documentation/Building-source/Building-with-temporary-changes.mdx","sourceDirName":"Software-Documentation/Building-source","slug":"/Software-Documentation/Building-source/Building-with-temporary-changes","permalink":"/test/docs/Software-Documentation/Building-source/Building-with-temporary-changes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Building with temporary changes","description":"Describes steps to use build using devtool for development purpose","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Building a full image","permalink":"/test/docs/Software-Documentation/Building-source/Building-a-full-image"},"next":{"title":"Adding changes as patches","permalink":"/test/docs/Software-Documentation/Building-source/Adding-changes-as-patches"}}');var t=n(4848),s=n(8453),r=n(6629);const d={title:"Building with temporary changes",description:"Describes steps to use build using devtool for development purpose",sidebar_position:2},c=void 0,l={},a=[{value:"An overview of Yocto SDK",id:"an-overview-of-yocto-sdk",level:2},{value:"Adding changes in SDK for development purpose",id:"adding-changes-in-sdk-for-development-purpose",level:2}];function h(e){const i={admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:"This page describes the steps to take a build with temporary changes in the SDK for development purpose."}),"\n",(0,t.jsx)(i.h2,{id:"an-overview-of-yocto-sdk",children:"An overview of Yocto SDK"}),"\n",(0,t.jsx)(i.p,{children:"Yocto Project is an open-source build system and toolset for creating custom Linux distributions for embedded devices.\nThe yocto SDK comprises of layers. Each layer contains code for a specific purpose, it might be board specific or general."}),"\n",(0,t.jsx)(i.p,{children:"Each layer contains multiple recipes. A recipe is a file that describes how to build a particular software component.\nIn order to change a software source code, you need to edit the recipe file associated with it."}),"\n",(0,t.jsx)(i.h2,{id:"adding-changes-in-sdk-for-development-purpose",children:"Adding changes in SDK for development purpose"}),"\n",(0,t.jsxs)(i.p,{children:["Yocto provides a command-line tool called ",(0,t.jsx)(i.code,{children:"devtool"})," to add as well as modify existing recipes and source code.\nThis way, the developer can make changes to the code temporarily without editing the actual recipe.\nThe usage of devtool can be demonstrated with an example :"]}),"\n",(0,t.jsxs)(i.p,{children:["Suppose you need to change the model name of the root node in the device tree source from ",(0,t.jsxs)("code",{children:[r.DU,"_sl1680 RDK"]})," to\n",(0,t.jsxs)("code",{children:[r.DU,"_board RDK"]}),". You will have to modify the recipe associated with the linux source. ",(0,t.jsx)(i.code,{children:"linux_dct"}),"\nis the recipe that handles the linux source code."]}),"\n",(0,t.jsx)(i.p,{children:"Follow the below procedure to change the model name :"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"Setup the environment before running the devtool utility:"}),"\n"]}),"\n",(0,t.jsx)("div",{className:"indented-block-point",children:(0,t.jsx)("pre",{children:(0,t.jsx)("code",{children:`docker run --rm -it -v $(pwd):$(pwd) ghcr.io/synaptics-astra/crops:1.0.0 --workdir=$(pwd)\nMACHINE=${r.mQ} source ${r.IM}/setup/setup-environment`})})}),"\n",(0,t.jsxs)(i.ol,{start:"2",children:["\n",(0,t.jsx)(i.li,{children:"To prepare the recipe for modifying the source code, run"}),"\n"]}),"\n",(0,t.jsxs)("div",{className:"indented-block-point",children:[(0,t.jsx)("pre",{children:(0,t.jsx)("code",{children:"devtool modify linux-dct"})}),(0,t.jsxs)(i.p,{children:["After executing this command, a workspace directory will be created inside the ",(0,t.jsx)("code",{children:"<build-dir>"})," folder.\nThe source code for linux kernel will be obtained inside the folder ",(0,t.jsx)("code",{children:"<build-dir>/workspace/sources/linux-dct/"})]})]}),"\n",(0,t.jsxs)(i.ol,{start:"3",children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"Rename the model in the dts file as below"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"Change in DTS file",src:n(7398).A+"",width:"1007",height:"258"})}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"You can build the image from here in two ways, either through bitbake utility or continue with the devtool"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"To build using bitbake, execute the following commands :"}),"\n"]}),"\n",(0,t.jsx)("div",{className:"indented-block-subpoint",children:(0,t.jsx)("pre",{children:(0,t.jsx)("code",{children:`bitbake -f linux-dct -c compile\nbitbake -f ${r.ND}`})})}),"\n",(0,t.jsxs)(i.ol,{start:"2",children:["\n",(0,t.jsx)(i.li,{children:"To build using devtool, execute the following commands :"}),"\n"]}),"\n",(0,t.jsx)("div",{className:"indented-block-subpoint",children:(0,t.jsx)("pre",{children:(0,t.jsx)("code",{children:`devtool build linux-dct\ndevtool build-image ${r.ND}`})})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)("div",{className:"indented-block-point",children:(0,t.jsxs)(i.p,{children:["Run the appropriate image as per your requirement. Here, we used the ",(0,t.jsx)("code",{children:`${r.ND}`})," as an example."]})}),"\n",(0,t.jsx)(i.p,{children:"If you are satisfied with testing using devtool, you can go back to compiling from the actual recipe by executing the command"}),"\n",(0,t.jsx)("pre",{children:(0,t.jsx)("code",{children:"devtool reset linux-dct"})}),"\n",(0,t.jsxs)(i.p,{children:["This will set bitbake to complile the source code of ",r.IM," instead of workspace. This method of customizing and building\nis for development purposes. Next topic guides you to integrate those changes permanently into ",(0,t.jsx)("code",{children:`${r.IM}`})," ."]}),"\n",(0,t.jsx)(i.admonition,{type:"note",children:(0,t.jsxs)(i.p,{children:["When devtool is active, bitbake overrides the actual recipe and looks into the recipe source in the workspace folder.\nIn order to use the actual recipe present in ",r.IM,", you must execute the reset command."]})})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},6629:e=>{e.exports=JSON.parse('{"DU":"Sentinel","_E":"SOM_SL1680_Mk1","tH":"CMSAC1_AS6806_A","mQ":"sentinel_som_sl1680_mk1","zn":"EVK_SL1680_Mk1","sV":"CMCGAS_AGSL_A","UW":"sentinel-core","ND":"sentinel-media","Uf":"sentinel-media-oobe","IM":"meta-dctk-sentinel","Cy":"root","PO":"setinel"}')},7398:(e,i,n)=>{n.d(i,{A:()=>o});const o=n.p+"assets/images/DEVTOOL_PATCH-5da99615fad94711990ea1704b645b15.png"},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>d});var o=n(6540);const t={},s=o.createContext(t);function r(e){const i=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:i},e.children)}}}]);